package cn.qrq.mapper;

import cn.qrq.springboot.entities.Employee;
import org.apache.catalina.User;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

//制定这是一个操作数据库的mapper
@Mapper
public interface EmployeeMapper {
//    //    删除
////    @Delete("delete from employee where name = #{id}")
////    public int deleteUserName(String id) ;
//    //查询全部内容，并保存到list里
//    @Select("select *from employee")
//    public List<Employee> QueryAll();
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated
     */
//    @Delete({
//            "delete from user",
//            "where id = #{id,jdbcType=INTEGER}"
//    })
//    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated
     * @param record
     */
    @Insert({
            "insert into employee (username, email, ",
            "phonenumber, balance, position) ",
            "values (#{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, ",
            "#{phonenumber,jdbcType=VARCHAR}, #{balance,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}) "
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(Employee record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated
     */
//    @Select({
//            "select",
//            "id, user_name, `password`, email, avatar, create_time, update_time, deleted",
//            "from user",
//            "where id = #{id,jdbcType=INTEGER}"
//    })
//    @Results({
//            @Result(column="id", property="id", jdbcType= JdbcType.INTEGER, id=true),
//            @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
//            @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
//            @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
//            @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
//            @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
//            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
//            @Result(column="deleted", property="deleted", jdbcType=JdbcType.BIT)
//    })
//    User selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated
     */

//    查询全部
    @Select({
            "select",
            "username, email, `phonenumber`, balance, position, id",
            "from employee"
    })
    @Results({
            @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
            @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
            @Result(column="phonenumber", property="phonenumber", jdbcType=JdbcType.VARCHAR),
            @Result(column="balance", property="balance", jdbcType=JdbcType.VARCHAR),
            @Result(column="position", property="position", jdbcType=JdbcType.VARCHAR),
            @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true)
    })
    List<Employee> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbg.generated
     */
//    @Update({
//            "update user",
//            "set user_name = #{userName,jdbcType=VARCHAR},",
//            "`password` = #{password,jdbcType=VARCHAR},",
//            "email = #{email,jdbcType=VARCHAR},",
//            "avatar = #{avatar,jdbcType=VARCHAR},",
//            "create_time = #{createTime,jdbcType=TIMESTAMP},",
//            "update_time = #{updateTime,jdbcType=TIMESTAMP},",
//            "deleted = #{deleted,jdbcType=BIT}",
//            "where id = #{id,jdbcType=INTEGER}"
//    })
//    int updateByPrimaryKey(User record);
}
